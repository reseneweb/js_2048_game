{"version":3,"sources":["scripts/main.js"],"names":["direction","page","document","querySelector","switcherStart","switcherScore","workingArray","Array","fill","changeIndicator","scoreCounter","disableFunctions","generateInitialValues","positionX","positionY","startValueX","Math","floor","random","startValueY","querySelectorAll","classList","add","remove","textContent","generateTwoOrFour","findAllIndices","i","length","push","includes","removeAllModificators","forEach","element","n","winningMessage","loseMessage","noMovesAvailable","move","allIndices","reverse","currentCellIndex","nearestCellIndex","indexThroughOneCell","indexThroughTwoCells","undefined","sideBySideAndEqual","throughOneAndEqual","throughTwoAndEqual","currentModifier","changeableModifier","addEventListener","contains","keyEvent","key"],"mappings":"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","file":"main.50374739.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst page = document.querySelector('.page');\nconst switcherStart = document.querySelector('.start');\nconst switcherScore = document.querySelector('.game-score');\n\nlet workingArray = Array(16).fill(null);\nlet changeIndicator = true;\nlet scoreCounter = 0;\nlet disableFunctions = false;\nlet direction;\n\nfunction generateInitialValues() {\n  let positionX;\n  let positionY;\n  const startValueX = Math.floor(Math.random() * 9);\n  const startValueY = Math.floor(Math.random() * 9);\n\n  do {\n    positionX = Math.floor(Math.random() * 16);\n    positionY = Math.floor(Math.random() * 16);\n  } while (positionX === positionY);\n\n  if (startValueX !== 0) {\n    page.querySelectorAll('.field-cell')[positionX]\n      .classList.add('field-cell--2');\n    workingArray[positionX] = 2;\n  } else {\n    page.querySelectorAll('.field-cell')[positionX]\n      .classList.add('field-cell--4');\n    workingArray[positionX] = 4;\n  }\n\n  if (startValueY !== 0) {\n    page.querySelectorAll('.field-cell')[positionY]\n      .classList.add('field-cell--2');\n    workingArray[positionY] = 2;\n  } else {\n    page.querySelectorAll('.field-cell')[positionY]\n      .classList.add('field-cell--4');\n    workingArray[positionY] = 4;\n  };\n\n  switcherStart.classList.remove('start');\n  switcherStart.classList.add('restart');\n  switcherStart.textContent = 'Restart';\n  page.querySelector('.message-start').classList.add('hidden');\n}\n\nfunction generateTwoOrFour() {\n  const findAllIndices = [];\n\n  for (let i = 0; i < workingArray.length; i++) {\n    if (workingArray[i]) {\n      findAllIndices.push(i);\n    }\n  }\n\n  let positionX;\n  const startValueX = Math.floor(Math.random() * 9);\n\n  do {\n    positionX = Math.floor(Math.random() * 16);\n  } while (findAllIndices.includes(positionX));\n\n  if (startValueX !== 0) {\n    page.querySelectorAll('.field-cell')[positionX]\n      .classList.add('field-cell--2');\n    workingArray[positionX] = 2;\n  } else {\n    page.querySelectorAll('.field-cell')[positionX]\n      .classList.add('field-cell--4');\n    workingArray[positionX] = 4;\n  }\n};\n\nfunction removeAllModificators() {\n  workingArray = Array(16).fill(null);\n  changeIndicator = true;\n  scoreCounter = 0;\n  switcherScore.textContent = '0';\n  page.querySelector('.message-win').classList.add('hidden');\n  page.querySelector('.message-lose').classList.add('hidden');\n  disableFunctions = false;\n\n  page.querySelectorAll('.field-cell').forEach((element) => {\n    page.querySelectorAll('.field-cell').forEach((n, i) => {\n      element.classList.remove(`field-cell--${2 ** (i + 1)}`);\n    });\n  });\n}\n\nfunction winningMessage() {\n  if (workingArray.includes(2048)) {\n    page.querySelector('.message-win').classList.remove('hidden');\n  }\n}\n\nfunction loseMessage() {\n  let noMovesAvailable = false;\n\n  if (!workingArray.includes(null)) {\n    for (let i = 0; i < workingArray.length; i++) {\n      if (\n        (workingArray[i] !== null)\n        && ((workingArray[i - 4] === workingArray[i])\n          || (workingArray[i + 4] === workingArray[i])\n          || ((workingArray[i - 1] === workingArray[i])\n          && (i !== 0) && (i !== 4) && (i !== 8) && (i !== 12))\n          || ((workingArray[i + 1] === workingArray[i])\n          && (i !== 3) && (i !== 7) && (i !== 11) && (i !== 15)))\n      ) {\n        noMovesAvailable = true;\n      }\n    }\n\n    if (noMovesAvailable === false) {\n      page.querySelector('.message-lose').classList.remove('hidden');\n      disableFunctions = true;\n    }\n  }\n}\n\nfunction move() {\n  if (disableFunctions) {\n    return;\n  }\n\n  changeIndicator = false;\n\n  const allIndices = [];\n\n  switch (true) {\n    case (direction === 'ArrowUp') || (direction === 'ArrowDown'):\n      for (let i = 0; i < workingArray.length; i++) {\n        if (workingArray[i] !== null) {\n          allIndices.push(i);\n        }\n      }\n\n      if (direction === 'ArrowDown') {\n        allIndices.reverse();\n      }\n      break;\n\n    case ((direction === 'ArrowLeft') || (direction === 'ArrowRight')):\n      for (let i = 0; i < workingArray.length; i += 4) {\n        if (workingArray[i] !== null) {\n          allIndices.push(i);\n        }\n      }\n\n      for (let i = 1; i < workingArray.length; i += 4) {\n        if (workingArray[i] !== null) {\n          allIndices.push(i);\n        }\n      }\n\n      for (let i = 2; i < workingArray.length; i += 4) {\n        if (workingArray[i] !== null) {\n          allIndices.push(i);\n        }\n      }\n\n      for (let i = 3; i < workingArray.length; i += 4) {\n        if (workingArray[i] !== null) {\n          allIndices.push(i);\n        }\n      }\n\n      if (direction === 'ArrowRight') {\n        allIndices.reverse();\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  for (let i = 0; i < allIndices.length; i++) {\n    const currentCellIndex = allIndices[i];\n    let nearestCellIndex;\n    let indexThroughOneCell;\n    let indexThroughTwoCells;\n\n    switch (true) {\n      case (direction === 'ArrowUp'):\n        nearestCellIndex = allIndices[i] - 4;\n        indexThroughOneCell = allIndices[i] - 8;\n        indexThroughTwoCells = allIndices[i] - 12;\n\n        break;\n      case (direction === 'ArrowDown'):\n        nearestCellIndex = allIndices[i] + 4;\n        indexThroughOneCell = allIndices[i] + 8;\n        indexThroughTwoCells = allIndices[i] + 12;\n\n        break;\n      case (direction === 'ArrowLeft'):\n        nearestCellIndex = allIndices[i] - 1;\n\n        if ((currentCellIndex === 0) || (currentCellIndex === 4)\n        || (currentCellIndex === 8) || (currentCellIndex === 12)) {\n          nearestCellIndex = undefined;\n        };\n\n        indexThroughOneCell = allIndices[i] - 2;\n\n        if ((currentCellIndex === 0) || (currentCellIndex === 1)\n        || (currentCellIndex === 4) || (currentCellIndex === 5)\n        || (currentCellIndex === 8) || (currentCellIndex === 9)\n        || (currentCellIndex === 12) || (currentCellIndex === 13)\n        ) {\n          indexThroughOneCell = undefined;\n        }\n\n        indexThroughTwoCells = allIndices[i] - 3;\n\n        if ((currentCellIndex === 0) || (currentCellIndex === 1)\n        || (currentCellIndex === 2) || (currentCellIndex === 4)\n        || (currentCellIndex === 5) || (currentCellIndex === 6)\n        || (currentCellIndex === 8) || (currentCellIndex === 9)\n        || (currentCellIndex === 10) || (currentCellIndex === 12)\n        || (currentCellIndex === 13) || (currentCellIndex === 14)\n        ) {\n          indexThroughTwoCells = undefined;\n        };\n\n        break;\n\n      case (direction === 'ArrowRight'):\n        nearestCellIndex = allIndices[i] + 1;\n\n        if ((currentCellIndex === 3) || (currentCellIndex === 7)\n          || (currentCellIndex === 11) || (currentCellIndex === 15)) {\n          nearestCellIndex = undefined;\n        };\n\n        indexThroughOneCell = allIndices[i] + 2;\n\n        if ((currentCellIndex === 2) || (currentCellIndex === 3)\n          || (currentCellIndex === 6) || (currentCellIndex === 7)\n          || (currentCellIndex === 10) || (currentCellIndex === 11)\n          || (currentCellIndex === 14) || (currentCellIndex === 15)\n        ) {\n          indexThroughOneCell = undefined;\n        }\n\n        indexThroughTwoCells = allIndices[i] + 3;\n\n        if ((currentCellIndex === 1) || (currentCellIndex === 2)\n          || (currentCellIndex === 3) || (currentCellIndex === 5)\n          || (currentCellIndex === 6) || (currentCellIndex === 7)\n          || (currentCellIndex === 9) || (currentCellIndex === 10)\n          || (currentCellIndex === 11) || (currentCellIndex === 13)\n          || (currentCellIndex === 14) || (currentCellIndex === 15)\n        ) {\n          indexThroughTwoCells = undefined;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    const sideBySideAndEqual = ((workingArray[nearestCellIndex] !== null)\n    && (workingArray[nearestCellIndex] === workingArray[currentCellIndex]));\n    const throughOneAndEqual = ((workingArray[indexThroughOneCell] !== null)\n    && (workingArray[indexThroughOneCell] === workingArray[currentCellIndex]));\n    const throughTwoAndEqual = ((workingArray[indexThroughTwoCells] !== null)\n    && (workingArray[indexThroughTwoCells] === workingArray[currentCellIndex]));\n\n    const currentModifier = `field-cell--${workingArray[currentCellIndex]}`;\n    const changeableModifier\n    = `field-cell--${workingArray[currentCellIndex] * 2}`;\n\n    switch (true) {\n      case sideBySideAndEqual:\n        page.querySelectorAll('.field-cell')[nearestCellIndex]\n          .classList.remove(currentModifier);\n\n        page.querySelectorAll('.field-cell')[nearestCellIndex]\n          .classList.add(changeableModifier);\n\n        page.querySelectorAll('.field-cell')[currentCellIndex]\n          .classList.remove(currentModifier);\n        workingArray[nearestCellIndex] *= 2;\n        workingArray[currentCellIndex] = null;\n        changeIndicator = true;\n        scoreCounter += workingArray[nearestCellIndex];\n        switcherScore.textContent = scoreCounter;\n\n        if (workingArray[indexThroughOneCell] === null) {\n          page.querySelectorAll('.field-cell')[indexThroughOneCell]\n            .classList.add(changeableModifier);\n\n          page.querySelectorAll('.field-cell')[nearestCellIndex]\n            .classList.remove(changeableModifier);\n          workingArray[indexThroughOneCell] = workingArray[nearestCellIndex];\n          workingArray[nearestCellIndex] = null;\n          changeIndicator = true;\n        };\n\n        if ((workingArray[indexThroughTwoCells] === null)) {\n          page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n            .classList.add(changeableModifier);\n\n          page.querySelectorAll('.field-cell')[indexThroughOneCell]\n            .classList.remove(changeableModifier);\n\n          workingArray[indexThroughTwoCells]\n          = workingArray[indexThroughOneCell];\n          workingArray[indexThroughOneCell] = null;\n          changeIndicator = true;\n        }\n        break;\n\n      case ((throughOneAndEqual)\n        && (workingArray[nearestCellIndex] === null)):\n        page.querySelectorAll('.field-cell')[indexThroughOneCell]\n          .classList.remove(currentModifier);\n\n        page.querySelectorAll('.field-cell')[indexThroughOneCell]\n          .classList.add(changeableModifier);\n\n        page.querySelectorAll('.field-cell')[currentCellIndex]\n          .classList.remove(currentModifier);\n        workingArray[indexThroughOneCell] *= 2;\n        workingArray[currentCellIndex] = null;\n        changeIndicator = true;\n        scoreCounter += workingArray[indexThroughOneCell];\n        switcherScore.textContent = scoreCounter;\n\n        if (workingArray[indexThroughTwoCells] === null) {\n          page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n            .classList.add(changeableModifier);\n\n          page.querySelectorAll('.field-cell')[indexThroughOneCell]\n            .classList.remove(changeableModifier);\n\n          workingArray[indexThroughTwoCells]\n          = workingArray[indexThroughOneCell];\n          workingArray[indexThroughOneCell] = null;\n          changeIndicator = true;\n        }\n        break;\n\n      case ((throughTwoAndEqual) && (workingArray[nearestCellIndex] === null)\n      && (workingArray[indexThroughOneCell] === null)):\n        page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n          .classList.remove(currentModifier);\n\n        page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n          .classList.add(changeableModifier);\n\n        page.querySelectorAll('.field-cell')[currentCellIndex]\n          .classList.remove(currentModifier);\n        workingArray[indexThroughTwoCells] *= 2;\n        workingArray[currentCellIndex] = null;\n        changeIndicator = true;\n        scoreCounter += workingArray[indexThroughTwoCells];\n        switcherScore.textContent = scoreCounter;\n        break;\n\n      default:\n        switch (true) {\n          case (workingArray[nearestCellIndex] === null):\n            page.querySelectorAll('.field-cell')[nearestCellIndex]\n              .classList.add(currentModifier);\n\n            page.querySelectorAll('.field-cell')[currentCellIndex]\n              .classList.remove(currentModifier);\n            workingArray[nearestCellIndex] = workingArray[currentCellIndex];\n            workingArray[currentCellIndex] = null;\n            changeIndicator = true;\n\n            if (workingArray[indexThroughOneCell] === null) {\n              page.querySelectorAll('.field-cell')[indexThroughOneCell]\n                .classList.add(currentModifier);\n\n              page.querySelectorAll('.field-cell')[nearestCellIndex]\n                .classList.remove(currentModifier);\n\n              workingArray[indexThroughOneCell]\n              = workingArray[nearestCellIndex];\n              workingArray[nearestCellIndex] = null;\n              changeIndicator = true;\n            };\n\n            if ((workingArray[indexThroughTwoCells] === null)) {\n              page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n                .classList.add(currentModifier);\n\n              page.querySelectorAll('.field-cell')[indexThroughOneCell]\n                .classList.remove(currentModifier);\n\n              workingArray[indexThroughTwoCells]\n                = workingArray[indexThroughOneCell];\n              workingArray[indexThroughOneCell] = null;\n              changeIndicator = true;\n            };\n            break;\n\n          case (workingArray[indexThroughOneCell] === null):\n            page.querySelectorAll('.field-cell')[indexThroughOneCell]\n              .classList.add(currentModifier);\n\n            page.querySelectorAll('.field-cell')[currentCellIndex]\n              .classList.remove(currentModifier);\n            workingArray[indexThroughOneCell] = workingArray[nearestCellIndex];\n            workingArray[currentCellIndex] = null;\n            changeIndicator = true;\n\n            if (workingArray[indexThroughTwoCells] === null) {\n              page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n                .classList.add(currentModifier);\n\n              page.querySelectorAll('.field-cell')[indexThroughOneCell]\n                .classList.remove(currentModifier);\n\n              workingArray[indexThroughTwoCells]\n                = workingArray[indexThroughOneCell];\n              workingArray[indexThroughOneCell] = null;\n              changeIndicator = true;\n            }\n            break;\n          case (workingArray[indexThroughTwoCells] === null):\n            page.querySelectorAll('.field-cell')[indexThroughTwoCells]\n              .classList.add(currentModifier);\n\n            page.querySelectorAll('.field-cell')[currentCellIndex]\n              .classList.remove(currentModifier);\n            workingArray[indexThroughTwoCells] = workingArray[nearestCellIndex];\n            workingArray[currentCellIndex] = null;\n            changeIndicator = true;\n            break;\n\n          default:\n            break;\n        };\n    };\n  };\n\n  winningMessage();\n\n  if (changeIndicator) {\n    generateTwoOrFour();\n  }\n\n  loseMessage();\n};\n\nswitcherStart.addEventListener('click', () => {\n  if (switcherStart.classList.contains('start')) {\n    generateInitialValues();\n  } else {\n    removeAllModificators();\n    generateInitialValues();\n  };\n});\n\ndocument.addEventListener('keydown', keyEvent => {\n  changeIndicator = true;\n  direction = keyEvent.key;\n  move();\n});\n"]}